!function(e,l){"function"==typeof define&&define.amd?define(["schemaForm"],l):"object"==typeof exports?module.exports=l(require("schemaForm")):e.bootstrapDecorator=l(e.schemaForm)}(this,function(e){return angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/foundation/actions-trcl.html",'<div class="button-group schema-form-actions {{form.htmlClass}}" ng-transclude=""></div>'),e.put("directives/decorators/foundation/actions.html",'<div class="button-group schema-form-actions {{form.htmlClass}}"><input ng-repeat-start="item in form.items" type="submit" class="button {{ item.style }} {{form.fieldHtmlClass}}" value="{{item.title}}" ng-if="item.type === \'submit\'"> <button ng-repeat-end="" class="button {{ item.style }} {{form.fieldHtmlClass}}" type="button" ng-disabled="form.readonly" ng-if="item.type !== \'submit\'" ng-click="buttonClick($event,item)"><span ng-if="item.icon" class="fa fa-lg {{item.icon}}"></span>{{item.title}}</button></div>'),e.put("directives/decorators/foundation/array.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions" ng-init="f_id = \'$$uid$$\'"><label class="" ng-show="showTitle()" title="{{ form.description }}">{{ form.title }}</label> <span ng-attr-id="{{ f_id }}"><ol class="" ng-model="modelArray" ui-sortable=""><li class="{{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index" style="clear: right"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" style="position: relative; z-index: 20; float: right" type="button" class="button small"><span aria-hidden="true">&times;</span><span class="sr-only" style="display: none">Close</span></button><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ol><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="button {{ form.style.add }} small"><i class="fa fa-lg plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div></span><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div><fb-validation-error error="field.errorModel[field.errorAttr]"></fb-validation-error></div>'),e.put("directives/decorators/foundation/category.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}}</label><schema-editor-category ng-show="form.key" sf-changed="form" placeholder="{{form.placeholder}}" class="{{form.fieldHtmlClass}}" ng-attr-id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" ng-attr-title="{{form.description}}" aria-describedby="{{f_id}} Status"><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div><span ng-if="form.feedback" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span><p ng-if="form.description"><small><span ng-bind-html="form.description"></span></small></p></schema-editor-category></div>'),e.put("directives/decorators/foundation/checkbox.html",'<div class="schema-form-checkbox {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}"><div class="switch tiny"><input type="checkbox" id="{{f_id}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{f_id}}" class="{{form.fieldHtmlClass}}"> <label for="{{f_id}}"></label> <span ng-bind-html="form.title"></span></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/checkboxes.html",'<div sf-field-model="sf-new-array" ng-init="f_id = \'$$uid$$\'" sf-new-array="$$value$$" class="schema-form-checkboxes {{form.htmlClass}}" ng-class="{\'error\': form.disableErrorState !== true && hasError()}"><label class="{{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="checkbox" ng-repeat="val in titleMapValues track by $index"><span><input type="checkbox" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" ng-attr-id="{{f_id}}-{{$index}}" name="{{f_id}}-{{$index}}" ng-model="titleMapValues[$index]"></span> <span><label ng-attr-for="{{f_id}}-{{$index}}" ng-bind-html="form.titleMap[$index].name"></label></span></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/default.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" title="{{ form.description }}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}} {{form.$id}} {{form.id}} {{form.$$id}}</label> <input ng-if="!field.settings.replacing[f_id] && !form.fieldAddonLeft && !form.fieldAddonRight" ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="{{form.fieldHtmlClass}}" ng-attr-id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" ng-attr-title="{{form.description}}" aria-describedby="{{f_id}} Status"> <input ng-if="field.settings.replacing[f_id] && !form.fieldAddonLeft && !form.fieldAddonRight" style="display:none" type="text" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="{{form.fieldHtmlClass}}" ng-attr-id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" ng-attr-title="{{form.description}}" aria-describedby="{{f_id}} Status"><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" class="collapse"><span ng-if="form.fieldAddonLeft" style="padding: 0" class="prefix small-3 column" ng-bind-html="form.fieldAddonLeft"></span> <span class="small-9 column" style="padding: 0"><input ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="{{form.fieldHtmlClass}}" ng-attr-id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" aria-describedby="{{f_id}} Status"></span> <span ng-if="form.fieldAddonRight" class="postfix small-3 column" style="padding: 0" ng-bind-html="form.fieldAddonRight"></span></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><span ng-if="form.feedback" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/detailed-range.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" title="{{ form.description }}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}}</label><vii-detailed-range model="$$value$$" field="form" ng-attr-id="{{f_id}}"></vii-detailed-range><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><span ng-if="form.feedback" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/fieldset-trcl.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'show-for-sr\': !showTitle() }">{{ form.title }}</legend><div class="" ng-show="false && form.description" ng-bind-html="form.description"></div><div ng-transclude=""></div></fieldset>'),e.put("directives/decorators/foundation/fieldset.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'show-for-sr\': !showTitle() }">{{ form.title }}</legend><div class="" ng-show="false && form.description" ng-bind-html="form.description"></div><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></fieldset>'),e.put("directives/decorators/foundation/height.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}}</label><vii-height field="field" sf-changed="form" class="{{form.fieldHtmlClass}}" id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" sf-simple-validation="" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" ng-attr-title="{{form.description}}" aria-describedby="{{f_id}} Status"></vii-height><div class="error-msg" ng-class="{error: hasError()}"></div><span ng-if="form.feedback" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/help.html",'<div class="schema-form-helpvalue {{form.htmlClass}}" ng-bind-html="form.helpvalue | trustAsHtml"></div>'),e.put("directives/decorators/foundation/hidden.html",'<input type="hidden" sf-changed="form" ng-disabled="form.readonly" ng-init="$$value$$ = $$value$$ || form.defaultValue || form.options.default" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-attr-id="hidden$$uid$$-{{fieldId}}" name="hidden$$uid$$-{{fieldId}}">'),e.put("directives/decorators/foundation/label.html",'<div class="vii-form-label"><label for="field{{ form.id }}">{{ form.label }}</label></div>'),e.put("directives/decorators/foundation/markdown.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-init="f_id = \'$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" title="{{ form.description }}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}}</label><vii-markdown-editor ng-show="form.key" sf-changed="form" placeholder="{{form.placeholder}}" class="{{form.fieldHtmlClass}}" ng-attr-id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" ng-attr-title="{{form.description}}" aria-describedby="{{f_id}} Status"><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></vii-markdown-editor></div>'),e.put("directives/decorators/foundation/media.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'error\': form.disableErrorState !== true && hasError()}"><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" title="{{form.description}}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><vii-file-uploader sf-uploader="" multiple="multiple" callbacks="callbacks"></vii-file-uploader><vii-file-pen files="files" model="$$value$$"></vii-file-pen><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><span ng-show="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span></div>'),e.put("directives/decorators/foundation/medications.html",'<div ng-init="f_id = \'$$uid$$\'"><label class="{{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><vii-medications model="$$value$$" form="form" field="field" is-mobile="isMobile" ng-attr-id="{{ f_id }}"></vii-medications><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div><div class="error-msg" ng-class="{error: hasError()}"></div><p ng-if="form.description"><small><span ng-bind-html="form.description"></span></small></p></div>'),e.put("directives/decorators/foundation/odl-widget.html",'<vii-odl-widget model="$$value$$" field="form"></vii-odl-widget>'),e.put("directives/decorators/foundation/radio-buttons.html",'<div class="schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" ng-init="f_id = \'$$uid$$\'"><div><label class="{{form.labelHtmlClass}}" title="{{form.description}}" ng-show="showTitle()">{{form.title}}</label></div><div class="btn-group" ng-attr-id="{{ f_id }}"><label class="btn {{ (item.value === $$value$$) ? form.style.selected || \'\' : form.style.unselected || \'\'; }}" ng-class="{ active: item.value === $$value$$ }" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" style="display: none;" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/radios-inline.html",'<div class="schema-form-radios-inline {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label class="{{form.labelHtmlClass}}" title="{{form.description}}" ng-show="showTitle()">{{form.title}}</label><div ng-if="form.description" ng-bind-html="form.description" class="description"></div><div ng-attr-id="{{form.key.slice(-1)[0] + \'-\' + fieldId}}"><label class="radio-inline" ng-repeat="item in form.titleMap track by $index" for="{{f_id}}-{{$index}}"><input type="radio" id="{{f_id}}-{{$index}}" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" schema-validate="form" ng-value="item.value"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ ngModel.$name + \'-\' + fieldId }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/radios.html",'<div class="schema-form-radios {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label class="{{form.labelHtmlClass}}" title="{{form.description}}" ng-show="showTitle()">{{form.title}}</label><div class="radio" ng-repeat="item in form.titleMap track by $index"><span><input type="radio" id="{{f_id}}-{{$index}}" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" schema-validate="form" ng-value="item.value"></span> <span><label ng-attr-for="{{f_id}}-{{$index}}" ng-bind-html="item.name"></label></span></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/save.html",'<vii-asf-save model="$$value$$" field="form"></vii-asf-save>'),e.put("directives/decorators/foundation/section.html",'<div class="{{form.htmlClass}}"><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></div>'),e.put("directives/decorators/foundation/select.html",'<div class="{{form.htmlClass}} schema-form-select" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label class="{{form.labelHtmlClass}}" title="{{form.description}}" ng-show="showTitle()">{{form.title}}</label><select ng-model="$$value$$" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" ng-attr-id="{{f_id}}" name="{{f_id}}"></select><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><fb-validation-error ng-if="field.errorModel[field.errorAttr]" error="field.errorModel[field.errorAttr]"></fb-validation-error><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/slider.html",'<div ng-init="f_id = \'$$uid$$\'"><label class="{{form.labelHtmlClass}}" title="{{form.description}}" ng-show="showTitle()">{{form.title}}</label><vii-slider model="$$value$$" ng-model="$$value$$" form="form" field="field" on-na="deleteProperty(path)" schema-validate="form" ng-attr-id="{{f_id}}"></vii-slider><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/submit.html",'<div class="schema-form-submit {{form.htmlClass}}"><input type="submit" class="button success {{ form.style }} {{form.fieldHtmlClass}}" value="{{form.title}}" ng-disabled="form.readonly" ng-if="form.type === \'submit\'"> <button class="button {{ form.style }}" type="button" ng-click="buttonClick($event,form)" ng-disabled="form.readonly" ng-if="form.type !== \'submit\'"><span ng-if="form.icon" class="fa fa-lg {{form.icon}}"></span> {{form.title}}</button></div>'),e.put("directives/decorators/foundation/tabarray.html",'<div sf-array="form" ng-init="selected = { tab: 0 }" class="clearfix schema-form-tabarray schema-form-tabarray-{{form.tabType || \'left\'}} {{form.htmlClass}}"><div ng-if="!form.tabType || form.tabType !== \'right\'" ng-class="{\'col-xs-3\': !form.tabType || form.tabType === \'left\'}"><ul class="tabs vertical" data-tab=""><li ng-repeat="item in modelArray track by $index" class="tab-title" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="fa fa-lg plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div><div ng-class="{\'col-xs-9\': !form.tabType || form.tabType === \'left\' || form.tabType === \'right\'}"><div class="tabs-content {{form.fieldHtmlClass}}"><div class="tab-pane clearfix" ng-repeat="item in modelArray track by $index" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator><button ng-hide="form.readonly" ng-click="selected.tab = deleteFromArray($index).length - 1" type="button" class="btn {{ form.style.remove || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-trash"></i> {{ form.remove || \'Remove\'}}</button></div></div></div><div ng-if="form.tabType === \'right\'" class="col-xs-3"><ul class="tabs vertical" data-tab=""><li ng-repeat="item in modelArray track by $index" class="tab-title" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="fa fa-lg plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div></div>'),e.put("directives/decorators/foundation/tabs.html",'<div ng-init="selected = { tab: 0 }" class="schema-form-tabs {{form.htmlClass}}"><ul class="tabs"><li ng-repeat="tab in form.tabs" class="tab-title" ng-disabled="form.readonly" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{ tab.title }}</a></li></ul><div class="tabs-content {{form.fieldHtmlClass}}"><div class="tab-pane" ng-disabled="form.readonly" ng-repeat="tab in form.tabs" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><bootstrap-decorator ng-repeat="item in tab.items" form="item"></bootstrap-decorator></div></div></div>'),e.put("directives/decorators/foundation/textarea.html",'<div class="{{form.htmlClass}} schema-form-textarea" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" title="{{form.description}}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}}</label> <textarea ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" class="{{form.fieldHtmlClass}}" id="{{f_id}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{f_id}}"></textarea><div ng-if="form.fieldAddonLeft || form.fieldAddonRight"><span ng-if="form.fieldAddonLeft" class="prefix" ng-bind-html="form.fieldAddonLeft"></span> <textarea class="{{form.fieldHtmlClass}}" id="{{f_id}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{f_id}}"></textarea> <span ng-if="form.fieldAddonRight" class="postfix" ng-bind-html="form.fieldAddonRight"></span></div><div class="help-block" ng-if="form.description && form.showDescription"><small><span ng-bind-html="form.description"></span></small></div><div class="error-msg" ng-class="{error: hasError()}"></div><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>'),e.put("directives/decorators/foundation/weight.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}" ng-init="f_id = \'$$uid$$\'" ng-class="{\'error\': form.disableErrorState !== true && hasError()}" sf-show-errors=""><label ng-show="showTitle()" class="{{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{f_id}}">{{form.title}}</label><vii-weight field="field" sf-changed="form" class="{{form.fieldHtmlClass}}" id="{{f_id}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" sf-simple-validation="" ng-disabled="form.readonly" schema-validate="form" name="{{f_id}}" ng-attr-title="{{form.description}}" aria-describedby="{{f_id}} Status"></vii-weight><div class="error-msg" ng-class="{error: hasError()}"></div><span ng-if="form.feedback" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'fa\': true, \'fa-lg\': true, \'check-circle\': hasSuccess(), \'success-color\': hasSuccess(), \'exclamation-circle\': hasError(), \'alert-color\': hasError() }" aria-hidden="true"></span><div ng-if="controls"><fb-replace-with-field target="#{{ f_id }}" controls="controls" enabled="true" field-elid="{{ field.elid }}" model="$$rplModel$$" attr="\'$$rplAttr$$\'" name="{{ ngModel.$name }}" lookup-fields="field.lookupFields"></fb-replace-with-field></div></div>')}]),angular.module("schemaForm").config(["schemaFormDecoratorsProvider",function(e){var l="directives/decorators/foundation/";e.defineDecorator("foundationDecorator",{actions:{template:l+"actions.html",replace:!1},array:{template:l+"array.html",replace:!1},button:{template:l+"submit.html",replace:!1},category:{template:l+"category.html",replace:!1},checkbox:{template:l+"checkbox.html",replace:!1},checkboxes:{template:l+"checkboxes.html",replace:!1},conditional:{template:l+"section.html",replace:!1},date:{template:l+"date-time.html",replace:!1},"date-time":{template:l+"date-time.html",replace:!1},"default":{template:l+"default.html",replace:!1},"detailed-range":{template:l+"detailed-range.html",replace:!1},fieldset:{template:l+"fieldset.html",replace:!1},height:{template:l+"height.html",replace:!1},help:{template:l+"help.html",replace:!1},hidden:{template:l+"hidden.html",replace:!1},label:{template:l+"label.html",replace:!1},markdown:{template:l+"markdown.html",replace:!1},media:{template:l+"media.html",replace:!1},medications:{template:l+"medications.html",replace:!1},number:{template:l+"default.html",replace:!1},"odl-widget":{template:l+"odl-widget.html",replace:!1},password:{template:l+"default.html",replace:!1},radios:{template:l+"radios.html",replace:!1},"radios-inline":{template:l+"radios-inline.html",replace:!1},save:{template:l+"save.html",replace:!1},section:{template:l+"section.html",replace:!1},select:{template:l+"select.html",replace:!1},slider:{template:l+"slider.html",replace:!1},submit:{template:l+"submit.html",replace:!1},tabarray:{template:l+"tabarray.html",replace:!1},tabs:{template:l+"tabs.html",replace:!1},textarea:{template:l+"textarea.html",replace:!1},weight:{template:l+"weight.html",replace:!1}},[function(e){console.debug(e,"www")}]),e.createDirectives({button:l+"submit.html",category:l+"category.html",checkbox:l+"checkbox.html",checkboxes:l+"checkboxes.html",date:l+"date-time.html","date-time":l+"date-time.html",datepicker:l+"datepicker.html","detailed-range":l+"detailed-range.html",height:{template:l+"height.html",replace:!1},input:l+"default.html",label:{template:l+"label.html",replace:!1},markdown:l+"markdown.html",media:l+"media.html",medications:{template:l+"medications.html",replace:!1},number:l+"default.html","odl-widget":l+"odl-widget.html",password:l+"default.html",radios:l+"radios.html","radios-inline":l+"radios-inline.html",save:l+"save.html",select:l+"select.html",slider:l+"slider.html",submit:l+"submit.html",text:l+"default.html",textarea:l+"textarea.html",weight:{template:l+"weight.html",replace:!1}})}]).directive("sfFieldset",function(){return{transclude:!0,scope:!0,templateUrl:"directives/decorators/foundation/fieldset-trcl.html",link:function(e,l,r){e.title=e.$eval(r.title)}}}),e});